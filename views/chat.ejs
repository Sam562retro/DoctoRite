<!DOCTYPE html>
<html>
    <head>
        <title>ChatPRO</title>
        <style>
            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500&display=swap');

            :root {
                --dark-color-a: #091921;
                --dark-color-b: #013966;
                --light-color: #52f1a2;
                --success-color: #8b13af;
                --error-color: #d9534f;
            }

            * {
                box-sizing: border-box;
                margin: 0;
                padding: 0;
            }

            body {
                font-family: 'Poppins', sans-serif;
                font-size: 16px;
                background: var(--light-color);
                margin: 20px;
            }

            ul {
                list-style: none;
            }

            a {
                text-decoration: none;
            }

            .btn {
                cursor: pointer;
                padding: 5px 15px;
                background: var(--light-color);
                color: var(--dark-color-a);
                border: 0;
                font-size: 17px;
            }

            /* Chat Page */

            .chat-container {
                max-width: 1100px;
                background: #fff;
                margin: 30px auto;
                overflow: hidden;
            }

            .chat-header {
                background: var(--dark-color-a);
                color: #fff;
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
                padding: 15px;
                display: flex;
                align-items: center;
                justify-content: space-between;
            }

            .chat-main {
                display: grid;
                grid-template-columns: 1fr 3fr;
            }

            .chat-sidebar {
                background: var(--dark-color-b);
                color: #fff;
                padding: 20px 20px 60px;
                overflow-y: scroll;
            }

            .chat-sidebar h2 {
                font-size: 20px;
                background: rgba(0, 0, 0, 0.1);
                padding: 10px;
                margin-bottom: 20px;
            }

            .chat-sidebar h3 {
                margin-bottom: 15px;
            }

            .chat-sidebar ul li {
                padding: 10px 0;
            }

            .chat-messages {
                padding: 30px;
                height: 500px;
                overflow-y: scroll;
            }

            .chat-messages .message {
                padding: 10px;
                margin-bottom: 15px;
                background-color: var(--light-color);
                border-radius: 5px;
                overflow-wrap: break-word;
            }

            .chat-messages .message .meta {
                font-size: 15px;
                font-weight: bold;
                color: var(--dark-color-b);
                opacity: 0.7;
                margin-bottom: 7px;
            }

            .chat-messages .message .meta span {
                color: #777;
            }

            .chat-form-container {
                padding: 20px 30px;
                background-color: var(--dark-color-a);
            }

            .chat-form-container form {
                display: flex;
            }

            .chat-form-container input[type='text'] {
                font-size: 16px;
                padding: 5px;
                height: 40px;
                flex: 1;
            }

            /* Join Page */
            .join-container {
                max-width: 500px;
                margin: 80px auto;
                color: #fff;
            }

            .join-header {
                text-align: center;
                padding: 20px;
                background: var(--dark-color-a);
                border-top-left-radius: 5px;
                border-top-right-radius: 5px;
            }

            .join-main {
                padding: 30px 40px;
                background: var(--dark-color-b);
            }

            .join-main p {
                margin-bottom: 20px;
            }

            .join-main .form-control {
                margin-bottom: 20px;
            }

            .join-main label {
                display: block;
                margin-bottom: 5px;
            }

            .join-main input[type='text'] {
                font-size: 16px;
                padding: 5px;
                height: 40px;
                width: 100%;
            }

            .join-main select {
                font-size: 16px;
                padding: 5px;
                height: 40px;
                width: 100%;
            }

            .join-main .btn {
                margin-top: 20px;
                width: 100%;
            }

            @media (max-width: 700px) {
                .chat-main {
                    display: block;
                }

                .chat-sidebar {
                    display: none;
                }
            }
        </style>
    </head>
    <body>
        <div class="chat-container">
            <header class="chat-header">
                <h1>DoctoRiteChat</h1>
                <a class="btn" id="leave-btn">Leave</a>
            </header>
            <main class="chat-main">
                <div class="chat-sidebar" style="overflow-x: hidden;">
                    <h3>Room Name : </h3>
                    <h2 id="roomNameShow"></h2>
                    <h3>Users</h3>
                    <ul id="users"></ul>
                </div>
                <div class="chat-messages"></div>
            </main>
            <div class="chat-form-container">
                <form id="chat-form">
                    <input id="msg" type="text" placeholder="Enter Message" autocomplete="off" required>
                    <button class="btn" type="submit">Send</button>
                </form>
            </div>
        </div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.10.1/qs.min.js"></script>
        <script src="/socket.io/socket.io.js"></script>
        <script>
            const chatForm = document.getElementById('chat-form');
            const chatMessage = document.querySelector('.chat-messages');
            const roomNameShowVariable = document.getElementById('roomNameShow');
            const userList = document.getElementById('users');

            const {username, room} = Qs.parse(location.search, {ignoreQueryPrefix : true});

            const socket = io();

            //join chat room
            socket.emit('joinRoom', {
                username, room
            })
            socket.on('roomUser', ({
            roomNameSent, users
            }) => {
                outputRoomName(roomNameSent);
                outputUsers(users);
            })

            socket.on('messageFromServer', msg => {
                console.log(msg);
                outputMessage(msg);
                chatMessage.scrollTop = chatMessage.scrollHeight;
            });

            chatForm.addEventListener('submit', function(e){
                e.preventDefault();
                let msg = e.target.elements.msg.value.trim();
                if(!msg){
                    return false
                }else {
                    socket.emit('chatMessage', msg);
                    e.target.elements.msg.value = '';
                    e.target.elements.msg.focus();
                }
            });

            let outputMessage = (message) => {
                const div = document.createElement('div');
                div.classList.add('message');
                const p = document.createElement('p');
                p.classList.add('meta');
                p.innerText = message.userName;
                console.log(message);
                p.innerHTML += `<span>${message.time}</span>`;
                div.appendChild(p);
                const para = document.createElement('p');
                para.classList.add('text');
                para.innerText = message.msgText;
                div.appendChild(para);
                document.querySelector('.chat-messages').appendChild(div);
            }

            let outputRoomName = (roomNameGiven) => {
                roomNameShowVariable.innerHTML = String(roomNameGiven);
            }

            let outputUsers = (userListGiven) => {
                userList.innerHTML = '';
                userListGiven.forEach(user => {
                    let li = document.createElement('li');
                    li.innerHTML = user.userName;
                    userList.appendChild(li);
                })
            };

            document.getElementById('leave-btn').addEventListener('click', function(e){
                if(confirm('Are you sure you would like to leave ?')){
                    window.location.href = '/';
                }
            });

        </script>
    </body>
</html>